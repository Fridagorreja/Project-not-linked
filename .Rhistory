install.packages("purrr")
install.packages("dplyr")
install.packages("R6")
install.packages("tidyverse")
install.packages("Rtools")
install.packages("tidyverse")
install.packages("plyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("rlang")
install.packages("rlang")
.libPaths()
.libPaths()
.libPaths("C:/Users/xgorfr/Desktop/Learning R/Rpackages")
.libPaths()
2+2
2+2
Sys.getenv("HOME")
.libPaths()
install.packages("usethis")
.libPaths("C:/Users/xgorfr/Desktop/Learning R/Rpackages")
.libPaths()
install.packages("rlang")
.libPaths()
.libPaths()
.libPaths("C:/Users/xgorfr/Desktop/Learning R/Rpackages")
.libPaths()
library(tidyverse)
.libPaths("C:/Users/xgorfr/Desktop/Learning R/Rpackage
.libPaths("C:/Users/xgorfr/Desktop/Learning R/Rpackage")
.libPaths("C:/Users/xgorfr/Desktop/Learning R/Rpackage")
install.packages(tidyverse)
install.packages("tidyverse")
.libPaths()
.libPaths("C:/Users/xgorfr/Desktop/Learning R/Rpackage")
.libPaths()
.libPaths("C:/Users/xgorfr/Desktop/Learning R/Rpackage")
.libPaths()
.libPaths("C:/Users/xgorfr/Desktop/Learning R/Rpackage")
.libPaths()
.libPaths(
)
.libPaths("C:/Users/xgorfr/Desktop/Learning R/Rpackage")
.libPaths()
.libPaths("C:/Users/xgorfr/Desktop/Learning R/Rpackage")
.libPaths()
.libPaths("C:/Users/xgorfr/Desktop/Learning R/Rpackage")
.libPaths()
.libPaths()
.libPaths("C:/Users/xgorfr/Desktop/Learning R/Rpackage")
.libPaths()
install.packages("plyr")
.libPaths(c("C:/Users/xgorfr/Desktop/Learning R/Rpackage", .libPaths()))
.libPaths()
.libPaths(c(.libPaths(), "C:/Users/xgorfr/Desktop/Learning R/Rpackage"))
.libPaths()
.libPaths("C:\R_plugins")
.libPaths("C:/R_plugins")
install.packages("tidyverse")
.Library("tidyverse")
library("tidyverse")
library(tidyverse)
install("ggpubr")
install.packages("ggpubr")
library(ggpubr)
#Load the package
data("marketing", package = "datarium")
devotools::install_github("kassmbara/datarium")
install_github("kassmbara/datarium")
install.packages("datarium")
#Load the package
data("marketing", package = "datarium")
head(marketing, 4)
library(datarium)
ggplot(marketing, aes(x=youtube, y=sales)) + geom_point()+ stat_smooth ()
ggplot(marketing, aes(x=youtube, y=sales, colours(1))) + geom_point()+ stat_smooth ()
ggplot(marketing, aes(x=youtube, y=sales, colours(2))) + geom_point()+ stat_smooth ()
cor(marketing$sales, marketing$youtube)
model <- lm(sales ~ youtube, data = marketing)
model
sales = 8.44 + 0.48*youtube
install.packages(ggplot)
install.packages("ggplot")
install.packages("ggplot2")
install.packages("ggplot2")
ggplot(marketing, aes(youtube, sales)) + geom_point()+ stat_smooth(method = lm)
ggplot(marketing, aes(youtube, sales)) + geom_point()+ stat_smooth(method = lm)
ggplot(marketing, aes(x=youtube, y=sales)) + geom_point()+ stat_smooth ()
ggplot(marketing, aes(youtube, sales)) + geom_point()+ stat_smooth(method = lm)
se = FALSE
ggplot(marketing, aes(youtube, sales)) + geom_point()+ stat_smooth(method = lm)
ggplot(marketing, aes(youtube, sales)) + geom_point()+ stat_smooth(method = lm, se = FALSE)
summary(model)
confint(model)
sigma(model)*100/mean(marketing$sales)
#Learning Script
.libPaths("C:/R_plugins")
library(tidyverse)
install.packages(c("datarium", "ggpubr", "tidyverse"))
1+1
num [1:4, 1:2]
num[1:4, 1:2]
num [1:4, 1:2] 12345678
example
example<-matrix(c(1,2,3,4,5,6,7,8),nrow=4, ncol=2)
View(example)
View(example)
setwd("C:/Users/xgorfr/Desktop/Learning R")
iris {datasets}
example<-matrix(c(1,2,3,4,5,6,7,8),nrow=4, ncol=2)
iris {datasets}
>install.packages("ggplot2")
install.packages("ggplot2")
source("https://bioconductor.org/biocLite.R")
biocLite (GenomicFeatures)
install.packages("devtools")
library(devtools)
install_github("author/package")
library(ggplot)
library(cluster, lib.loc = "C:/Program Files/R/R-4.0.3/library")
help(package="ggplot2")
help(package = "ggplot2")
help(package = "ggplot2")
help(package = "ggplot2")
help(package = "ggplot2")
browseVignettes("ggplot2")
help(devtool)
??devtool
??devtool
install.packages("KernSmooth")
